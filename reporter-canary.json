{
  "badPatches": [],
  "slowPatches": [
    {
      "plugin": "BetterSessions",
      "type": "took 10.6ms",
      "id": "36192",
      "match": "/\\.currentSession:null\\),children:\\[(?<=,icon:(\\i)\\}.+?)/"
    }
  ],
  "badStarts": [],
  "otherErrors": [],
  "ignoredErrors": [],
  "badWebpackFinds": [
    "findByProps(\"buttonWrapper\", \"buttonContent\")",
    "waitForComponent(\"[\"defaultMargin\".concat\", \"=\"h5\"\")",
    "waitForComponent(\".SELECTABLE),\", \".DISABLED:\")",
    "waitForComponent(\".titleId)\")",
    "waitForComponent(\".divider,\", \",style:\", \"\"div\"\", \"/\\.divider,\\i\\),style:/\")",
    "waitForComponent(\"#{intl::A11Y_LOADING_STARTED}))),!1\")",
    "waitForComponent(\".labelRow,ref:\", \".disabledText\")",
    "waitForComponent(\".checkboxWrapperDisabled:\")",
    "waitForComponent(\"#{intl::MAXIMUM_LENGTH_ERROR}\", \"\"input\"\")",
    "waitForComponent(\"this.getPaddingRight()},id:\")",
    "waitForComponent(\"case\"always-white\"\")",
    "waitForComponent(\">6?{\", \"variant:\")",
    "waitForComponent(\".selectPositionTop]:\"top\"===\", \"\"Escape\"===\")",
    "waitForComponent(\".selectPositionTop]:\"top\"===\", \".multi]:\")",
    "waitForComponent(\"\"markDash\".concat(\")",
    "waitForComponent(\"ref:this.ref,\", \"renderPopout:this.renderPopout,\")",
    "waitForComponent(\"role:\"dialog\",tabIndex:-1\")",
    "waitForComponent(\"ref:this.tabBarRef,className:\")",
    "waitForComponent(\".size-1.375*\")",
    "waitForComponent(\"#{intl::USER_SETTINGS_PROFILE_COLOR_SELECT_COLOR}\", \"showEyeDropper\")",
    "waitForComponent(\"defaultRenderUser\", \"showDefaultAvatarsForNullUsers\")",
    "waitFor(\"thin\", \"auto\", \"customTheme\")",
    "waitFor((m) => {\n        if (typeof m !== \"function\") {\n          return false;\n        }\n        const str2 = String(m);\n        return str2.includes(\".re...)",
    "waitForComponent(\"MASKED_LINK)\")",
    "waitForComponent(\"#{intl::MESSAGE_EDITED_TIMESTAMP_A11Y_LABEL}\")",
    "waitForComponent(\"Justify\", \"Align\", \"Wrap\")",
    "waitFor((m) => m.name === \"MenuCheckboxItem\"...)",
    "waitFor(\"path:[\"empty\"]\")",
    "waitFor(\"sliderContainer\", \"slider\", \"handleSize:16\", \"=100\")",
    "waitFor(\"role:\"searchbox\", \"top:2\", \"query:\")",
    "findByProps(\"createPortal\")",
    "findByCode(\"(299));\", \".onRecoverableError\")",
    "findByProps(\"connectStores\")",
    "findByProps(\"ChannelMessage\", \"SlashCommand\")",
    "findByProps(\"openPrivateChannel\")",
    "findByCode(\"useStateFromStores\")",
    "waitForStore(\"DraftStore\")",
    "waitForStore(\"UserStore\")",
    "waitForStore(\"UserProfileStore\")",
    "waitForStore(\"ChannelStore\")",
    "waitForStore(\"SelectedChannelStore\")",
    "waitForStore(\"SelectedGuildStore\")",
    "waitForStore(\"GuildStore\")",
    "waitForStore(\"GuildRoleStore\")",
    "waitForStore(\"GuildMemberStore\")",
    "waitForStore(\"RelationshipStore\")",
    "waitForStore(\"PresenceStore\")",
    "waitForStore(\"ReadStateStore\")",
    "waitForStore(\"GuildChannelStore\")",
    "waitForStore(\"MessageStore\")",
    "waitForStore(\"WindowStore\")",
    "waitForStore(\"EmojiStore\")",
    "waitForStore(\"StickersStore\")",
    "waitForStore(\"TypingStore\")",
    "waitForStore(\"ThemeStore\")",
    "waitForStore(\"VoiceStateStore\")",
    "waitFor(\"getRole\", \"getRoles\")",
    "find((m) => m.ProtoClass?.typeName?.endsWith(\".FrecencyUserSettings\")...)",
    "find((m) => m.ProtoClass?.typeName?.endsWith(\".PreloadedUserSettings\")...)",
    "find((m) => typeof m === \"object\" && m.del && m.put...)",
    "findByProps(\"parseTwoDigitYear\")",
    "findByProps(\"highlight\", \"registerLanguage\")",
    "findByCode(\"useDrag::spec.begin was deprecated\")",
    "findByCode(\".options);return\", \".collect,\")",
    "findByProps(\"debounce\", \"cloneDeep\")",
    "waitFor(\"fromTimestamp\", \"extractTimestamp\")",
    "waitFor(\"parseTopic\")",
    "waitFor(\"show\", \"close\")",
    "waitFor(\"showToast\")",
    "findByCode(\".USER(\")",
    "findByProps(\"clearAll\", \"addFile\")",
    "findByCode(\"=!0,showLargeMessageDialog:\")",
    "waitFor(\"open\", \"saveAccountChanges\")",
    "find((m) => typeof m.ADMINISTRATOR === \"bigint\"...)",
    "findByProps(\"editMessage\", \"sendMessage\")",
    "findByProps(\"clearCache\", \"_channelMessages\")",
    "findByProps(\"openUserProfileModal\", \"closeUserProfileModal\")",
    "findByProps(\"resolveInvite\")",
    "findByProps(\"openPrivateChannel\")",
    "findByProps(\"getGuildBannerURL\", \"getUserAvatarURL\")",
    "findByCode(\"hasMediaOptions\", \"shouldHideMediaOptions\")",
    "waitFor(\"buttonContainer\", \"channelTextArea\")",
    "waitFor((m) => m.show && m.dismiss && !m.suppressAll...)",
    "findByProps(\"slider\", \"input\", \"container\")",
    "findByCode(\"this._gradientType=\")",
    "findByProps(\"markup\", \"codeContainer\")",
    "findByProps(\"inputWrapper\", \"inputError\", \"error\")",
    "findByProps(\"button\", \"disabled\", \"enabled\")",
    "findByProps(\"moreUsers\", \"emptyUser\", \"avatarContainer\", \"clickableAvatar\")",
    "findByProps(\"button\", \"disabled\", \"enabled\")",
    "findComponentByCode(\".POPOUT,user\")",
    "findByCode(\".actionBarIcon)\")",
    "findByCode(\"\"Invalid Origin\"\", \".application\")",
    "findStore(\"ChannelRTCStore\")",
    "findComponentByCode(\"(\"guildsnav\")\")",
    "findStore(\"ExpandedGuildFolderStore\")",
    "findStore(\"SortedGuildStore\")",
    "findByProps(\"move\", \"toggleGuildFolderExpand\")",
    "findByProps(\"open\", \"selectRole\", \"updateGuild\")",
    "findStore(\"AuthSessionsStore\")",
    "findByProps(\"saveAccountChanges\", \"open\")",
    "findByProps(\"timestampTooltip\", \"blockquoteContainer\")",
    "findByProps(\"sessionIcon\")",
    "findComponentByCode(\"!1,lowerBadgeSize:\")",
    "waitFor(\"animating\", \"baseLayer\", \"bg\", \"layer\", \"layers\")",
    "findStore(\"ApplicationStreamPreviewStore\")",
    "findStore(\"ApplicationStreamingStore\")",
    "findByCode(\"type:\"UNSYNCED_USER_SETTINGS_UPDATE\", \"\"system\"===\")",
    "findStore(\"ClientThemesBackgroundStore\")",
    "findByProps(\"convertNameToSurrogate\")",
    "proxyLazyWebpack(() => {\n        const [ModalStack2, DraftManager2] = findBulk(\n          filters.byProps(\"pushLazy\", \"popAll\"),\n          filters.byProps(\"clearDra...)",
    "findByCode(\"profileThemeStyle:\", \"--profile-gradient-primary-color\")",
    "findComponentByCode(\".party?(0\", \".card\")",
    "findByProps(\"modalPreview\", \"modalCloseButton\", \"spinner\", \"modal\")",
    "LazyComponentWebpack(() => {\n        const component2 = findComponentByCode(\".shopPreviewBanner\");\n        return React.memo(component2);\n      }...)",
    "findByProps(\"managedReactiveScroller\")",
    "findComponentByCode(\"fileUploadInput,\")",
    "findComponentByCode(\".customizationSectionBackground\")",
    "findByProps(\"key\", \"combo\")",
    "find((m) => m?.definition?.id === \"2024-09_bug_reporter\"...)",
    "findByCode(\".GUILD_EMOJIS(\", \"EMOJI_UPLOAD_START\")",
    "findByCode(\".additionalEmojiSlots\")",
    "findStore(\"UserSettingsProtoStore\")",
    "proxyLazyWebpack(() => UserSettingsActionCreators.PreloadedUserSettingsActionCreators...)",
    "proxyLazyWebpack(() => searchProtoClassField(\"appearance\", PreloadedUserSettingsActionCreators.ProtoClass)...)",
    "proxyLazyWebpack(() => searchProtoClassField(\"clientThemeSettings\", AppearanceSettingsActionCreators)...)",
    "findByCode(\".getUserIsAdmin(\")",
    "findComponentByCode(\"isTryItOutFlow:\", \"pendingThemeColors:\", \"pendingAvatarDecoration:\", \"EDIT_PROFILE_BANNER\")",
    "findByProps(\"searchBar\", \"searchBarFullRow\")",
    "findByProps(\"createFriendInvite\")",
    "findByProps(\"memberSinceWrapper\")",
    "findByProps(\"memberSince\")",
    "findByCode(\"month:\"short\",day:\"numeric\"\")",
    "findByProps(\"getLocale\")",
    "findComponentByCode(\"\"auto\":\"smooth\"\", \".section\")",
    "findByCode(\".MESSAGE,commandTargetId:\")",
    "waitFor(\"\"devmode-copy-id-\".concat\")",
    "findComponentByCode(\".USER_MENTION)\")",
    "findComponentByCode(\".NONE,disabled:\", \".PANEL_BUTTON\")",
    "findStore(\"RunningGameStore\")",
    "findStore(\"UserAffinitiesV2Store\")",
    "findByProps(\"getLocalPresence\")",
    "findStore(\"GuildMemberCountStore\")",
    "findStore(\"ChannelMemberStore\")",
    "findStore(\"ThreadMemberListStore\")",
    "findByProps(\"deleteMessage\", \"startEditMessage\")",
    "findByProps(\"isEditing\", \"isEditingAny\")",
    "findComponentByCode(\".hiddenVisually]:\")",
    "findComponentByCode(\".inlineMediaEmbed\")",
    "findComponentByCode(\".withFooter]:\", \"childrenMessageContent:\")",
    "findComponentByCode(\"childrenExecutedCommand:\", \".hideAccessories\")",
    "findByProps(\"message\", \"searchResult\")",
    "findByProps(\"embedAuthorIcon\", \"embedAuthor\", \"embedAuthor\")",
    "findByProps(\"markup\", \"codeContainer\")",
    "findByProps(\"messageContent\", \"markupRtl\")",
    "findByProps(\"edited\", \"communicationDisabled\", \"isSystemMessage\")",
    "findByProps(\"selectPrivateChannel\")",
    "findByProps(\"emptyIconFriends\", \"emptyIconGuilds\")",
    "findComponentByCode(\"\"PRESS_SECTION\"\", \".header\")",
    "findByProps(\"updateGuildNotificationSettings\")",
    "findByCode(\".COMMUNITY)||\", \".isOptInEnabled(\")",
    "findByProps(\"getMessageRequestsCount\")",
    "findByProps(\"getGuildPermissionSpecMap\")",
    "findByCode(\"convertSurrogateToName\", \"customIconSrc\", \"unicodeEmoji\")",
    "proxyLazyWebpack(() => {\n        const [RoleRootClasses2, RoleClasses2, RoleBorderClasses2] = findBulk(\n          filters.byProps(\"root\", \"expandButton\", \"collapseB...)",
    "findByProps(\"container\", \"scroller\", \"list\")",
    "findByProps(\"button\", \"buttonInner\", \"icon\", \"banner\")",
    "findByProps(\"getUploads\")",
    "findComponentByCode(\"id:\"color-picker\"\")",
    "findByProps(\"privateChannelsHeaderContainer\")",
    "findStore(\"PrivateChannelSortStore\")",
    "findStore(\"SessionsStore\")",
    "findByProps(\"getUploads\")",
    "findStore(\"ActiveJoinedThreadsStore\")",
    "findStore(\"GuildAvailabilityStore\")",
    "findByProps(\"separator\", \"latin24CompactTimeStamp\")",
    "findByProps(\"spoilerContent\")",
    "findByProps(\"messagesWrapper\", \"navigationDescription\")",
    "findByProps(\"button\", \"wrapper\", \"disabled\", \"separator\")",
    "findByProps(\"insertNodes\", \"textToText\")",
    "findByProps(\"start\", \"end\", \"toSlateRange\")",
    "findByProps(\"FORM\")",
    "findComponentByCode(\"disableThemedBackground\", \"CHANNEL_TEXT_AREA\")",
    "findByCode(\".GUILD_TEXT])\", \"fromServer)\")",
    "findByProps(\"button\", \"buttonInner\", \"icon\", \"banner\")",
    "findByCode(\"\"Result cannot be null because the message is not null\"\")",
    "findByProps(\"allSummaries\", \"findSummary\")",
    "findByCode(\".people)),startId:\", \".type}\")",
    "findByProps(\"icon\", \"acronym\", \"childWrapper\")",
    "findComponentByCode(\"discriminatorClass:\", \".isMobileOnline\", \"getAvatarURL\")",
    "findStore(\"UserGuildJoinRequestStore\")",
    "findByProps(\"pinMessage\", \"unpinMessage\")",
    "find((m) => m.colors?.INTERACTIVE_MUTED?.css...)",
    "findComponentByCode(\"#{intl::CONNECTIONS_ROLE_OFFICIAL_ICON_TOOLTIP}\")",
    "findByCode(\".TWITTER_LEGACY:\")",
    "findByProps(\"isSupported\", \"getByUrl\")",
    "findByCode(\".getPreviewThemeColors\", \"primaryColor:\")",
    "findByProps(\"auto\", \"managedReactiveScroller\")",
    "findByProps(\"chat\", \"content\", \"noChat\", \"chatContent\")",
    "findComponentByCode(\"#{intl::ROLE_REQUIRED_SINGLE_USER_MESSAGE}\")",
    "findComponentByCode(\"#{intl::FORUM_TAG_A11Y_FILTER_BY_TAG}\")",
    "findByProps(\"convertSurrogateToName\")",
    "findByProps(\"getURL\", \"getEmojiColors\")",
    "findByProps(\"modeMuted\", \"modeSelected\", \"unread\", \"icon\")",
    "findComponent((m) => m.prototype?.render?.toString().includes(countDownFilter)...)",
    "proxyLazyWebpack(() => {\n        const { Store } = Flux;\n        const SpotifySocket = findByProps(\"getActiveSocketAndDevice\");\n        const SpotifyAPI = findByPro...)",
    "findByProps(\"getPlayerState\")",
    "findByProps(\"getPendingReply\")",
    "findByProps(\"markWithDelta\", \"markAndLog\", \"markAt\")",
    "findComponentByCode(\".dots,\", \"dotRadius:\")",
    "findStore(\"TypingStore\")",
    "findStore(\"UserGuildSettingsStore\")",
    "findByProps(\"timestampInline\")",
    "findByProps(\"selectVoiceChannel\", \"selectChannel\")",
    "findComponentByCode(\".status)/2):0\")",
    "findComponentByCode(\"frontSrc:\", \"getAvatarURL\")",
    "findByProps(\"actionButton\", \"highlight\")",
    "findByCode(\".createFromServer(\", \".isBlockedForMessage\", \"messageReference:\")",
    "findStore(\"MediaEngineStore\")",
    "findComponentByCode(\"waveform:\", \"onVolumeChange\")",
    "find((m) => m.prototype?.trackUploadFinished...)",
    "findStore(\"PendingReplyStore\")",
    "findByProps(\"optionName\", \"optionIcon\", \"optionLabel\")",
    "findByProps(\"JUMP_TO_GUILD\", \"SERVER_NEXT\")",
    "findByProps(\"moreUsers\", \"emptyUser\", \"avatarContainer\", \"clickableAvatar\")",
    "find((m) => m.ANNOUNCEMENT_THREAD === 10...)",
    "findByCode(\".SUPPRESS_NOTIFICATIONS))return!1\")",
    "findStore(\"UserProfileStore\")",
    "findStore(\"ApplicationStore\")",
    "findByProps(\"fetchApplication\")",
    "findComponentByCode(\"location:\"UserProfileActivityCard\",\")",
    "findComponentByCode(\"M5 2a3 3 0 0 0-3 3v14a3 3 0 0 0 3 3h14a3 3 0 0 0 3-3V5a3 3 0 0 0-3-3H5Zm6.81 7c-.54 0-1 .26-1.23.61A1 1 0 0 1 8.92 8.5 3.49 3.49 0 0 1 11.82 7c1.81 0 3.43 1.38 3.43 3.25 0 1.45-.98 2.61-2.27 3.06a1 1 0 0 1-1.96.37l-.19-1a1 1 0 0 1 .98-1.18c.87 0 1.44-.63 1.44-1.25S12.68 9 11.81 9ZM13 16a1 1 0 1 1-2 0 1 1 0 0 1 2 0Zm7-10.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM18.5 20a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3ZM7 18.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0ZM5.5 7a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\")",
    "findByProps(\"avatar\", \"zalgo\")",
    "findByProps(\"joinGuild\")",
    "findByProps(\"getMessages\")",
    "findComponentByCode(\"10.58l-3.3-3.3a1\")",
    "findComponentByCode(\".dots,\", \"dotRadius:\")",
    "findByProps(\"numberBadge\", \"textBadge\")",
    "findComponentByCode(\"12h1a8\")",
    "findComponentByCode(\".iconContainerWithGuildIcon,\")",
    "findComponentByCode(\".73-2.25h6.12l1.9-5.83Z\")",
    "findComponentByCode(\"0v-5h5a1\")",
    "findByCode(\".playWithListener().then\")",
    "find((m) => m.prototype?.trackUploadFinished...)",
    "findComponentByCode(\".HEADER_BAR_BADGE_TOP:\", \".iconBadge,\"top\"\")",
    "findComponentByCode(\".customizationSectionBackground\")",
    "findByProps(\"unsafe_rawColors\", \"modules\")",
    "findByCode(\".palette[\", \".desaturateUserColors\")",
    "findComponentByCode(\".customColorPicker\")",
    "findStore(\"ProfileEffectStore\")",
    "findByCode(\",this.type=\", \".PROFILE_EFFECT\")",
    "findByProps(\"containerBottom\", \"containerTop\")",
    "findByProps(\"jumpToMessage\")",
    "findByProps(\"selectVoiceChannel\")",
    "findStore(\"UserStore\")",
    "findStore(\"RelationshipStore\")",
    "findByProps(\"header\", \"title\", \"emptyState\")",
    "findByProps(\"createFriendInvite\")",
    "findByCode(\".getPreviewThemeColors\", \"primaryColor:\")",
    "proxyLazyWebpack(() => {\n        const { Store } = Flux;\n        const SortedGuildStore2 = findStoreLazy(\"SortedGuildStore\");\n        const DB_KEY = \"HideServers_se...)",
    "findByProps(\"icon\", \"acronym\", \"childWrapper\")",
    "findComponentByCode(\".HEADER_BAR_BADGE_TOP:\", \".iconBadge,\"top\"\")",
    "findComponentByCode(\".dots,\", \"dotRadius:\")",
    "findStore(\"TypingStore\")",
    "findStore(\"PrivateChannelSortStore\")",
    "findByProps(\"md\", \"lg\", \"xxs\")",
    "findByProps(\"colors\", \"layout\")",
    "waitFor(\"colors\", \"layout\")",
    "findComponentByCode(\".customizationSectionBackground\")",
    "findByProps(\"getUploads\")",
    "findByProps(\"getMediaEngine\")",
    "findByCode(\"desktop sources\")",
    "findByCode(\"type:\"STREAM_START\"\")",
    "findByProps(\"recentMentionsPopout\")",
    "findByProps(\"inboxTitle\", \"tab\")",
    "findByProps(\"size36\")",
    "findByCode(\".getUnseenInviteCount())\")",
    "findByCode(\"getProTip\", \"canCloseAllMessages:\")",
    "findByCode(\".createFromServer(\", \".isBlockedForMessage\", \"messageReference:\")",
    "findComponentByCode(\"\"pulsingEllipsis\"\")",
    "findComponentByCode(\"0v3ZM20\")",
    "findByProps(\"Controller\")",
    "findByProps(\"getVideoDeviceId\")",
    "findComponentByCode(\"isFirstMessageInForumPost\", \"trackAnnouncementViews\")",
    "find((m) => m?.prototype?.getAvatarURL...)",
    "findByCode(\"\"embed_\"),\")",
    "findStore(\"UserGuildSettingsStore\")",
    "findByCode(\".is_message_request_timestamp,\")",
    "findComponentByCode(\".HEADER_BAR_BADGE_TOP:\", \".iconBadge,\"top\"\")",
    "findByProps(\"commit\", \"getOrCreate\")",
    "findByProps(\"a\", \"animated\", \"useTransition\")",
    "waitFor(\"createContext\")",
    "findByProps(\"getPendingReply\")",
    "findByProps(\"sendMessage\")",
    "findByProps(\"getDraft\", \"getState\")",
    "find((m) => m.Types?.[0] === \"BOT\"...)",
    "findByCode(\".getCurrentUser()\", \".computeLurkerPermissionsAllowList()\")",
    "findByProps(\"deleteGuild\", \"sendTransferOwnershipPincode\")",
    "findByCode(\".isThread())return'\"'.concat(\")",
    "findByProps(\"DM\", \"GUILD_TEXT\", \"PUBLIC_THREAD\", \"UNKNOWN\")",
    "findByProps(\"THREADS\", \"GUILD_TEXTUAL\", \"ALL_DMS\")",
    "findByProps(\"REPLY\", \"STAGE_RAISE_HAND\", \"CHANNEL_NAME_CHANGE\")",
    "findComponentByCode(\"1-.06-.63L6.16\")",
    "findStore(\"UserGuildSettingsStore\")",
    "findComponentByCode(\"10.47a.76.76\")",
    "findComponentByCode(\".HEADER_BAR_BADGE_TOP:\", \".iconBadge,\"top\"\")",
    "findComponentByCode(\"0l1.8-1.8c.17\")",
    "findComponentByCode(\".NONE,disabled:\", \".PANEL_BUTTON\")",
    "findStore(\"MediaEngineStore\")",
    "findByProps(\"selectChannel\", \"selectVoiceChannel\")",
    "findByProps(\"toggleSelfMute\")",
    "findByProps(\"toggleSelfDeaf\")",
    "findComponentByCode(\"fileUploadInput,\")",
    "find((m) => m.prototype?.trackUploadFinished...)",
    "findStore(\"PendingReplyStore\")",
    "findComponentByCode(\".73-2.25h6.12l1.9-5.83Z\")",
    "findByProps(\"optionName\", \"optionIcon\", \"optionLabel\")",
    "findByProps(\"roleIcon\", \"separator\")",
    "findComponentByCode(\"#{intl::ROLE_ICON_ALT_TEXT}\")",
    "findByProps(\"getOrEnsurePrivateChannel\")",
    "findComponentByCode(\".HEADER_BAR_BADGE_TOP:\", \".iconBadge,\"top\"\")",
    "findComponentByCode(\".themedMobile]:\")",
    "findComponentByCode(\"filterAfterTimestamp:\", \"chatInputType\")",
    "findComponentByCode(\"sidebarType:\", \"homeSidebarWidth\")",
    "findComponentByCode(\"#{intl::HUB_DIRECTORY_CHANNEL_TITLE}\")",
    "findByProps(\"FORM\", \"NORMAL\")",
    "findByProps(\"ThreadSidebar\", \"MessageRequestSidebar\")",
    "findComponentByCode(\"18.58V3a1\")",
    "findComponentByCode(\"12l4.94-4.94a1.5\")",
    "findComponentByCode(\".HEADER_BAR_BADGE_TOP:\", \".iconBadge,\"top\"\")",
    "findComponentByCode(\".HEADER_BAR_BADGE_TOP:\", \".iconBadge,\"top\"\")",
    "findByProps(\"moreUsers\", \"emptyUser\", \"avatarContainer\", \"clickableAvatar\")",
    "findComponentByCode(\".NONE,disabled:\", \".PANEL_BUTTON\")",
    "proxyLazyWebpack(() => {\n        class SpotifyLrcStore2 extends Flux.Store {\n          mPosition = 0;\n          start = 0;\n          track = null;\n          device ...)",
    "findByProps(\"auto\", \"customTheme\")",
    "findComponentByCode(\" 1-.5.5H10a6\")",
    "findByProps(\"getLocalPresence\")",
    "findComponentByCode(\"0-2h-5V6Z\")",
    "findByProps(\"statusItem\")",
    "findComponentByCode(\".menuItemLabel\", \".menuItemInner\")",
    "findComponentByCode(\"/\\.translateSurrogatesToInlineEmoji\\(\\i\\.name\\);/\")",
    "findStore(\"MediaEngineStore\")",
    "findComponentByCode(\"defaultRenderUser\", \"showDefaultAvatarsForNullUsers\")",
    "findByProps(\"inputWrapper\", \"inputError\", \"error\")",
    "findByProps(\"timestamp\", \"compact\", \"contentOnly\")",
    "findByProps(\"getLocale\")",
    "findByCode(\"=>({flashQueue:[...\")",
    "findByProps(\"selectPrivateChannel\")",
    "findByProps(\"isVideoEnabled\")",
    "findStore(\"UserGuildSettingsStore\")",
    "findStore(\"JoinedThreadsStore\")",
    "findByProps(\"getOutputVolume\")",
    "findByProps(\"getLocalPresence\")",
    "findStore(\"GuildMemberCountStore\")",
    "findStore(\"ChannelMemberStore\")",
    "findByProps(\"getVoiceStatesForChannel\")",
    "findStore(\"AccessibilityStore\")",
    "findByProps(\"connectStores\")",
    "findStore(\"ApplicationStreamingStore\")",
    "findComponentByCode(\"defaultRenderUser\", \"showDefaultAvatarsForNullUsers\")",
    "findByProps(\"moreUsers\", \"emptyUser\", \"avatarContainer\", \"clickableAvatar\")"
  ]
}